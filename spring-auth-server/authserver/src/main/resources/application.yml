server:
  port: 9000

logging:
  level:
    root: INFO
    org.springframework.security: TRACE
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: TRACE
# custom properties defined for this app
app:
  auth:
    issuer: http://localhost:9000
    token:
      accessTokenTTL: 10 # value in days
      refreshTokenTTL: 10 # value in days
  client: # add all the clients that needs to access this authorization server
    keys: client01
    registration:
      client01:
        client-id: client1
        client-secret: "{noop}secret1"
        client-name: client one
        client-authentication-methods: client_secret_basic
        authorization-grant-types: authorization_code,refresh_token,client_credentials
        redirect-uris: http://127.0.0.1:8080/login/oauth2/code/product-client-oidc,http://127.0.0.1:8080/authorized
        scopes: openid,profile,product.read

spring:
  security:
    oauth2:
      client:
        registration:
          google-idp:
            provider: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, https://www.googleapis.com/auth/userinfo.email
            client-name: Sign in with Google
            redirect-uri:
              - "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            user-name-attribute: email
  datasource:
    url: ${DATASOURCE_URL}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    hikari:
      data-source-properties:
        useSSL: false
  jpa:
    hibernate:
      ddl-auto: none
  mail:
    host: ${SMTP_HOST}
    port: ${SMTP_PORT}
    username: ${SMTP_USER}
    password: ${SMTP_PASSWORD} #set in env variable
    properties:
      mail: 
        smtp:
          auth: true
          starttls:
            enable: true
  # cache is used to retain the otp sent for verifying email or sms for a duration of 10minutes
  cache:
    type: caffeine
    cache-names: otp
    caffeine:
      spec: expireAfterWrite=10m

twilio:
  enabled: true
  account: ${TWILIO_ACCOUNT_SID}
  token: ${TWILIO_AUTH_TOKEN}
  phone: ${TWILIO_PHONE} #+16073605030